name: Release

on:
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      run-kubernetes-ci: ${{ steps.changes.outputs.pallet == 'true' }}
      run-workflows-ci: ${{ steps.changes.outputs.workflows == 'true' }}
      run-terraform-ci: ${{ steps.changes.outputs.terraform == 'true' }}
      run-solution-ci: ${{ steps.changes.outputs.solution == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          list-files: json
          filters: |
            pallet:
              - '.pallet/**'
            workflows: 
              - '.github/workflows/**'
              - 'docker-compose.yaml'
              - 'devtools/**'
            terraform:
              - 'infrastructure/terraform/**'
            solution:
              - 'solutions/CN.Shared.JokeService/**'

  # build-and-publish:
  #   name: Build and Publish
  #   needs: setup
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v4
  #       with:
  #         dotnet-version: '8.0.x'

  #     - name: Restore dependencies
  #       run: dotnet restore solutions/CN.Shared.JokeService/JokeService/JokeService.csproj

  #     - name: Build and Publish BackgroundService
  #       run: dotnet publish solutions/CN.Shared.JokeService/JokeService/JokeService.csproj -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true /p:PlatformTarget=x64 -o infrastructure/terraform/publish/production

  build-publish-and-create-pr:
    name: Build, Publish, and Create PR
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore solutions/CN.Shared.JokeService/JokeService/JokeService.csproj

      - name: Build and Publish BackgroundService
        run: dotnet publish solutions/CN.Shared.JokeService/JokeService/JokeService.csproj -c Release -r win-x64 --self-contained true /p:PublishSingleFile=true /p:PlatformTarget=x64 -o infrastructure/terraform/publish/production

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: auto-pr-${{ github.run_id }}
          base: main
          title: Autogenerated - Publish exe to production
          body: Files generated for release ${{ github.event.release.tag_name }}
          commit-message: Publish exe

  checks-passed:
    name: Checks Passed
    needs:
      - setup
      # - build-and-publish
      - build-publish-and-create-pr
    runs-on: ubuntu-latest
    if: always()
    steps:
      - run: exit 1
        name: "Catch Errors"
        if: ${{ contains(join(needs.*.result, ','), 'failure') }}
