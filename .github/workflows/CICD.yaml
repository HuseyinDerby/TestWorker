name: CI/CD

on:
  pull_request:
    branches:
      - "*"
    types: [opened, reopened, closed, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      run-workflows-ci: ${{ steps.changes.outputs.workflows == 'true' && github.event_name == 'pull_request' && github.event.pull_request.merged == false }}
      run-terraform-ci: ${{ steps.changes.outputs.terraform == 'true' && github.event_name == 'pull_request' && github.event.pull_request.merged == false }}
      run-solution-ci: ${{ steps.changes.outputs.solution == 'true' && github.event_name == 'pull_request' && github.event.pull_request.merged == false }}
      run-solution-cd: ${{ steps.changes.outputs.solution == 'true' && github.event_name == 'pull_request' && github.event.pull_request.merged == true }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: changes
      with:
        list-files: json
        filters: |
          workflows: 
            - '.github/workflows/**'
            - 'docker-compose.yaml'
            - 'devtools/**'
          terraform:
            - 'infrastructure/terraform/**'
          solution:
            - 'solutions/CN.Shared.JokeService/**'

build-and-publish:
    needs: setup
    if: needs.setup.outputs.run-solution-ci == 'true'
    uses: ./.github/workflows/build-publish.yml
    with:
      branch: ${{ github.event.pull_request.head.ref }}
      
build-publish-create-pr:
  needs: setup
  if: needs.setup.outputs.run-solution-cd == 'true'
  uses: ./.github/workflows/build-publish.yaml
  with:
    ref: main
  
Create PR and close old autogenerated PR:
  uses: ./.github/workflows/create-pr.yaml
    
checks-passed:
  name: Checks passed
  needs:
    - setup
    - build-and-publish
    - build-publish-create-pr
  runs-on: ubuntu-latest
  if: always()
  steps:
    - run: exit 1
      name: "Catch errors"
      if: ${{ contains(join(needs.*.result, ','), 'failure') }}
